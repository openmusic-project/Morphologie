
(:patch
 (:om-version 0.03)
 (:name "structure-2")
 (:doc "")
 (:info
  (:created "2019/09/26 11:18:10")
  (:modified "2019/09/26 11:19:00"))
 (:window (:size (1282 557)) (:position (277 342)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:comment
   (:x 997)
   (:y 316)
   (:w 104)
   (:h 43)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text "(CPU intensive)")
   (:id 0))
  (:comment
   (:x 718)
   (:y 328)
   (:w 104)
   (:h 43)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text "(CPU intensive)")
   (:id 1))
  (:comment
   (:x 52)
   (:y 354)
   (:w 104)
   (:h 43)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text "(CPU intensive)")
   (:id 2))
  (:comment
   (:x 497)
   (:y 41)
   (:w 295)
   (:h 49)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text "Structure-2 permits 5 output modes")
   (:id 3))
  (:comment
   (:x 706)
   (:y 274)
   (:w 136)
   (:h 73)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text
    "Returns list of lists of amount of completion and the relative form")
   (:id 4))
  (:comment
   (:x 999)
   (:y 276)
   (:w 136)
   (:h 73)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text "Save detailed output to text file")
   (:id 5))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 19")
   (:x 1084)
   (:y 157)
   (:w 26)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 4)
   (:id 6))
  (:box
   (:type :value)
   (:reference null)
   (:group-id nil)
   (:name "aux 18")
   (:x 1115)
   (:y 157)
   (:w 30)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value nil)
   (:id 7))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 17")
   (:x 1052)
   (:y 157)
   (:w 26)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 8))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux31 4")
   (:x 1030)
   (:y 157)
   (:w 20)
   (:h 28)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 5)
   (:id 9))
  (:box
   (:library "Morphologie")
   (:type :function)
   (:reference (:symbol "STRUCTURE-2" "MORPH"))
   (:group-id nil)
   (:name "structure-2")
   (:x 997)
   (:y 194)
   (:w 124)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQ")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "N-MAX")
     (:value 10)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ALPHA?")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RESULT")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "length")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 16")
   (:x 715)
   (:y 157)
   (:w 26)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 3)
   (:id 11))
  (:box
   (:type :value)
   (:reference null)
   (:group-id nil)
   (:name "aux 15")
   (:x 746)
   (:y 157)
   (:w 30)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value nil)
   (:id 12))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 14")
   (:x 683)
   (:y 157)
   (:w 26)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 13))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux31 3")
   (:x 661)
   (:y 157)
   (:w 20)
   (:h 28)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 5)
   (:id 14))
  (:box
   (:library "Morphologie")
   (:type :function)
   (:reference (:symbol "STRUCTURE-2" "MORPH"))
   (:group-id nil)
   (:name "structure-2")
   (:x 628)
   (:y 194)
   (:w 124)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQ")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "N-MAX")
     (:value 10)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ALPHA?")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RESULT")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "length")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 15))
  (:comment
   (:x 443)
   (:y 275)
   (:w 179)
   (:h 82)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text
    "Returns in a list : the list of patterns and, as a matrix, for each pattern, its completion form (crible) in the input sequence, using 0 or 1.")
   (:id 16))
  (:box
   (:type :value)
   (:reference null)
   (:group-id nil)
   (:name "aux 13")
   (:x 577)
   (:y 157)
   (:w 30)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value nil)
   (:id 17))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 12")
   (:x 546)
   (:y 157)
   (:w 26)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 2)
   (:id 18))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 11")
   (:x 514)
   (:y 157)
   (:w 26)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 19))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux31 2")
   (:x 492)
   (:y 157)
   (:w 20)
   (:h 28)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 5)
   (:id 20))
  (:box
   (:library "Morphologie")
   (:type :function)
   (:reference (:symbol "STRUCTURE-2" "MORPH"))
   (:group-id nil)
   (:name "structure-2")
   (:x 459)
   (:y 194)
   (:w 124)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQ")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "N-MAX")
     (:value 10)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ALPHA?")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RESULT")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "length")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 21))
  (:box
   (:type :value)
   (:reference null)
   (:group-id nil)
   (:name "aux 10")
   (:x 153)
   (:y 160)
   (:w 30)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value nil)
   (:id 22))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 9")
   (:x 125)
   (:y 160)
   (:w 26)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0)
   (:id 23))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 8")
   (:x 98)
   (:y 160)
   (:w 26)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 24))
  (:box
   (:type :value)
   (:reference null)
   (:group-id nil)
   (:name "aux 7")
   (:x 938)
   (:y 157)
   (:w 30)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value nil)
   (:id 25))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 6")
   (:x 907)
   (:y 157)
   (:w 26)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 3)
   (:id 26))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 5")
   (:x 875)
   (:y 157)
   (:w 26)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 27))
  (:box
   (:type :value)
   (:reference null)
   (:group-id nil)
   (:name "aux 4")
   (:x 391)
   (:y 158)
   (:w 30)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value nil)
   (:id 28))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 3")
   (:x 359)
   (:y 158)
   (:w 26)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 29))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 2")
   (:x 328)
   (:y 158)
   (:w 26)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 30))
  (:comment
   (:x 907)
   (:y 394)
   (:w 215)
   (:h 42)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text "This converts strings into lists of symbols")
   (:id 31))
  (:comment
   (:x 907)
   (:y 431)
   (:w 232)
   (:h 64)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text "Then each structure found can be processed as a sequence.")
   (:id 32))
  (:box
   (:type :function)
   (:reference second)
   (:group-id nil)
   (:name "second")
   (:x 856)
   (:y 336)
   (:w 77)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 33))
  (:box
   (:type :function)
   (:reference mat-trans)
   (:group-id nil)
   (:name "mat-trans")
   (:x 853)
   (:y 273)
   (:w 89)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "MATRIX")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 34))
  (:box
   (:library "Morphologie")
   (:type :function)
   (:reference (:symbol "STR->SYMB" "MORPH"))
   (:group-id nil)
   (:name "str->symb")
   (:x 848)
   (:y 385)
   (:w 91)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "STRINGS")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 35))
  (:box
   (:library "Morphologie")
   (:type :function)
   (:reference (:symbol "STRUCTURE-2" "MORPH"))
   (:group-id nil)
   (:name "structure-2")
   (:x 820)
   (:y 194)
   (:w 124)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQ")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "N-MAX")
     (:value 10)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ALPHA?")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RESULT")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "length")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 36))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux31")
   (:x 853)
   (:y 157)
   (:w 20)
   (:h 28)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 5)
   (:id 37))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux3")
   (:x 302)
   (:y 158)
   (:w 20)
   (:h 28)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 5)
   (:id 38))
  (:comment
   (:x 266)
   (:y 274)
   (:w 136)
   (:h 73)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text
    "Returns the position where each pattern found starts in the sequence")
   (:id 39))
  (:box
   (:library "Morphologie")
   (:type :function)
   (:reference (:symbol "STRUCTURE-2" "MORPH"))
   (:group-id nil)
   (:name "structure-2")
   (:x 269)
   (:y 194)
   (:w 124)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQ")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "N-MAX")
     (:value 10)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ALPHA?")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RESULT")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "length")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 40))
  (:comment
   (:x 51)
   (:y 275)
   (:w 178)
   (:h 70)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text
    "Prints out to the Listener detailed of the structures founded with up to 5 elements and more than 75% completion of the input sequence.")
   (:id 41))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux2")
   (:x 185)
   (:y 160)
   (:w 26)
   (:h 28)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 75)
   (:id 42))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux1")
   (:x 76)
   (:y 160)
   (:w 20)
   (:h 28)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 5)
   (:id 43))
  (:box
   (:library "Morphologie")
   (:type :function)
   (:reference (:symbol "STRUCTURE-2" "MORPH"))
   (:group-id nil)
   (:name "structure-2")
   (:x 56)
   (:y 194)
   (:w 150)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQ")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "N-MAX")
     (:value 10)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ALPHA?")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RESULT")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "length")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "seuil")
     (:value 10)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 44))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux")
   (:x 104)
   (:y 46)
   (:w 215)
   (:h 28)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list a b c a b d a b c j h i j h i a b d a b c))
   (:id 45)))
 (:connections
  (:connection
   (:from (:box 6 :out 0))
   (:to (:box 10 :in 3))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 7 :out 0))
   (:to (:box 10 :in 4))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 8 :out 0))
   (:to (:box 10 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 9 :out 0))
   (:to (:box 10 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 11 :out 0))
   (:to (:box 15 :in 3))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 15 :in 4))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 15 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 14 :out 0))
   (:to (:box 15 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 17 :out 0))
   (:to (:box 21 :in 4))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 18 :out 0))
   (:to (:box 21 :in 3))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 19 :out 0))
   (:to (:box 21 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 20 :out 0))
   (:to (:box 21 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 22 :out 0))
   (:to (:box 44 :in 4))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 23 :out 0))
   (:to (:box 44 :in 3))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 24 :out 0))
   (:to (:box 44 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 25 :out 0))
   (:to (:box 36 :in 4))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 26 :out 0))
   (:to (:box 36 :in 3))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 27 :out 0))
   (:to (:box 36 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 28 :out 0))
   (:to (:box 40 :in 4))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 29 :out 0))
   (:to (:box 40 :in 3))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 30 :out 0))
   (:to (:box 40 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 33 :out 0))
   (:to (:box 35 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 34 :out 0))
   (:to (:box 33 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 36 :out 0))
   (:to (:box 34 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 37 :out 0))
   (:to (:box 36 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 38 :out 0))
   (:to (:box 40 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 42 :out 0))
   (:to (:box 44 :in 5))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 43 :out 0))
   (:to (:box 44 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 45 :out 0))
   (:to (:box 10 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 45 :out 0))
   (:to (:box 15 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 45 :out 0))
   (:to (:box 21 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 45 :out 0))
   (:to (:box 36 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 45 :out 0))
   (:to (:box 40 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 45 :out 0))
   (:to (:box 44 :in 0))
   (:attributes (:color nil :style nil :modif nil)))))