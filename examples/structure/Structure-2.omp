; OM File Header - Saved 2009/06/15 12:47:32
; (6.0011 :patc (om-make-point 127 67) (om-make-point 50 50) (om-make-point 736 492) "No documentation " 183 0 nil "2009/06/15 12:47:32")
; End File Header
(in-package :om)(load-lib-for (quote ("morphologie")))(setf *om-current-persistent* (om-load-patch1 "Structure-2" (quote ((om-load-boxcomment "comment" (om-make-point 107 39) (quote "This converts strings into symbols") "" (om-make-point 515 344) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 120 67) (quote "Then each structure found can be processed as a sequence.") "" (om-make-point 515 381) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote lispfun) "SECOND" (quote second) (quote ((om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 469 282) nil nil nil nil 1) (om-load-boxcall (quote genfun) "MAT-TRANS" (quote mat-trans) (quote ((om-load-inputfun (quote input-funbox) "the list" "MATRIX" nil))) (om-make-point 461 223) nil nil nil nil 1) (om-load-boxcall (quote genfun) "STR->SYMB" (quote morph::str->symb) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "STRINGS" nil))) (om-make-point 458 331) nil nil nil "str->symb" 1) (om-load-boxcall (quote genfun) "STRUCTURE-211" (quote morph::structure-2) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "SEQ" nil) (om-load-inputfun (quote input-funbox) "no documentation" "N-MAX" 10) (om-load-inputfunmenu1 (quote input-funmenu) "no documentation" "ALPHA?" 1 (list (list "alpha" 1) (list "num" 0))) (om-load-inputfunmenu1 (quote input-funmenu) "no documentation" "RESULT" 0 (list (list "extended" 0) (list "pos" 1) (list "mat" 2) (list "p-score" 3) (list "save" 4))) (om-load-inputfun (quote input-funbox) "no documentation" "LENGTH" nil))) (om-make-point 319 156) (om-make-point 124 61) nil nil "structure-2" 1) (om-load-boxcall (quote bastype) "aux31" (quote t) (quote nil) (om-make-point 350 123) (om-make-point 20 28) 5 "5" nil) (om-load-boxcomment "comment11" (om-make-point 136 73) (quote "Return only the structures found and thier completion score") "" (om-make-point 325 219) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux3" (quote t) (quote nil) (om-make-point 212 124) (om-make-point 20 28) 5 "5" nil) (om-load-boxcomment "comment1" (om-make-point 136 73) (quote "Return the position where each pattern found starts in the sequence") "" (om-make-point 186 214) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote genfun) "STRUCTURE-21" (quote morph::structure-2) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "SEQ" nil) (om-load-inputfun (quote input-funbox) "no documentation" "N-MAX" 10) (om-load-inputfunmenu1 (quote input-funmenu) "no documentation" "ALPHA?" 1 (list (list "alpha" 1) (list "num" 0))) (om-load-inputfunmenu1 (quote input-funmenu) "no documentation" "RESULT" 1 (list (list "extended" 0) (list "pos" 1) (list "mat" 2) (list "p-score" 3) (list "save" 4))) (om-load-inputfun (quote input-funbox) "no documentation" "LENGTH" nil))) (om-make-point 179 158) (om-make-point 124 61) nil nil "structure-2" 1) (om-load-boxcomment "comment" (om-make-point 133 92) (quote "Returns the structures founded with up to 5 elements and more than 75% completion of the input sequence.") "" (om-make-point 50 218) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux2" (quote t) (quote nil) (om-make-point 148 124) (om-make-point 26 28) 75 "75" nil) (om-load-boxcall (quote bastype) "aux1" (quote t) (quote nil) (om-make-point 102 124) (om-make-point 20 28) 5 "5" nil) (om-load-boxcall (quote genfun) "STRUCTURE-2" (quote morph::structure-2) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "SEQ" nil) (om-load-inputfun (quote input-funbox) "no documentation" "N-MAX" 10) (om-load-inputfunmenu1 (quote input-funmenu) "no documentation" "ALPHA?" 1 (list (list "alpha" 1) (list "num" 0))) (om-load-inputfunmenu1 (quote input-funmenu) "no documentation" "RESULT" 0 (list (list "extended" 0) (list "pos" 1) (list "mat" 2) (list "p-score" 3) (list "save" 4))) (om-load-inputfun (quote input-funbox) "no documentation" "LENGTH" nil) (om-load-inputfun (quote input-funbox) "no documentation" "SEUIL" 10))) (om-make-point 41 158) (om-make-point 124 61) nil nil "structure-2" 1) (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 46 56) (om-make-point 215 28) (list (quote a) (quote b) (quote c) (quote a) (quote b) (quote d) (quote a) (quote b) (quote c) (quote j) (quote h) (quote i) (quote j) (quote h) (quote i) (quote a) (quote b) (quote d) (quote a) (quote b) (quote c)) "(a b c a b d a b c j h i j h i a b d a b c)" nil))) (quote ((3 0 2 0 nil 0) (5 0 3 0 nil 0) (2 0 4 0 nil 0) (15 0 5 0 nil 0) (6 0 5 1 nil 0) (15 0 10 0 nil 0) (8 0 10 1 nil 0) (15 0 14 0 nil 0) (13 0 14 1 nil 0) (12 0 14 5 nil 0))) nil 6.0011))