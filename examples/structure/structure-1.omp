; OM File Header - Saved 2009/06/15 12:44:59
; (6.0011 :patc (om-make-point 45 68) (om-make-point 50 50) (om-make-point 609 432) "No documentation " 183 0 nil "2009/06/15 12:44:59")
; End File Header
(in-package :om)(load-lib-for (quote ("morphologie")))(setf *om-current-persistent* (om-load-patch1 "structure-1" (quote ((om-load-boxcomment "comment" (om-make-point 70 51) (quote "save the analysis in a text file") "" (om-make-point 472 300) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote genfun) "STRUCTURE-111" (quote morph::structure-1) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "SEQ" nil) (om-load-inputfunmenu1 (quote input-funmenu) "no documentation" "ALPHA?" 1 (list (list "alpha" 1) (list "num" 0))) (om-load-inputfunmenu1 (quote input-funmenu) "no documentation" "LISSE?" 1 (list (list "yes" 1) (list "no" 0))) (om-load-inputfunmenu1 (quote input-funmenu) "no documentation" "RESULT" 2 (list (list "struct" 3) (list "short" 0) (list "extend" 1) (list "save" 2))))) (om-make-point 391 295) nil nil nil nil 1) (om-load-boxcomment "comment2" (om-make-point 139 96) (quote "Gives the same results if smooth menu is \"yes\" : each localy repeted elements are removed in the sequence") "" (om-make-point 215 309) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux2" (quote t) (quote nil) (om-make-point 29 219) (om-make-point 302 52) (list (quote a) (quote a) (quote a) (quote b) (quote b) (quote b) (quote c) (quote a) (quote a) (quote b) (quote d) (quote d) (quote d) (quote d) (quote a) (quote b) (quote c) (quote j) (quote h) (quote i) (quote i) (quote i) (quote j) (quote h) (quote i) (quote a) (quote b) (quote d) (quote a) (quote b) (quote c) (quote a) (quote b) (quote c) (quote a) (quote b) (quote d) (quote a) (quote b) (quote c) (quote j) (quote h) (quote i) (quote i) (quote i) (quote i) (quote i) (quote j) (quote j) (quote h) (quote i) (quote a) (quote b) (quote b) (quote b) (quote d) (quote a) (quote a) (quote a) (quote a) (quote a) (quote a) (quote a) (quote a) (quote b) (quote c) (quote c) (quote c) (quote c) (quote c) (quote c)) "(a a a b b b c a a b d d d d a b c j h i i i j h i a b d a b c a b c a b d a b c j h i i i i i  j j h i a b b b d a a a a a a a a b c c c c c c)" nil) (om-load-boxcall (quote genfun) "STRUCTURE-11" (quote morph::structure-1) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "SEQ" nil) (om-load-inputfunmenu1 (quote input-funmenu) "no documentation" "ALPHA?" 1 (list (list "alpha" 1) (list "num" 0))) (om-load-inputfunmenu1 (quote input-funmenu) "no documentation" "LISSE?" 1 (list (list "yes" 1) (list "no" 0))) (om-load-inputfunmenu1 (quote input-funmenu) "no documentation" "RESULT" 3 (list (list "struct" 3) (list "short" 0) (list "extend" 1) (list "save" 2))))) (om-make-point 155 294) nil nil nil nil 1) (om-load-boxcomment "comment" (om-make-point 160 24) (quote "<- Number of analysis levels") "" (om-make-point 343 111) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 121 70) (quote "apply the mark analysis (structure-1) at each level of analysis.") "" (om-make-point 379 147) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux1" (quote t) (quote nil) (om-make-point 323 115) (om-make-point 20 28) 3 "3" nil) (om-load-boxcall (quote genfun) "RMA-1" (quote morph::rma-1) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "SEQ" nil) (om-load-inputfunmenu1 (quote input-funmenu) "no documentation" "SMOO1" 1 (list (list "yes" 1) (list "no" 0))) (om-load-inputfun (quote input-funbox) "no documentation" "LEVELS" 1) (om-load-inputfunmenu1 (quote input-funmenu) "no documentation" "SMOO2" 0 (list (list "no" 0) (list "yes" 1))) (om-load-inputfunmenu1 (quote input-funmenu) "no documentation" "ALPHA?" 1 (list (list "alpha" 1) (list "num" 0))) (om-load-inputfunmenu1 (quote input-funmenu) "no documentation" "RESULT" 2 (list (list "struct" 0) (list "short" 1) (list "extend" 2) (list "save" 3))))) (om-make-point 300 145) nil nil nil nil 1) (om-load-boxcall (quote genfun) "STRUCTURE-1" (quote morph::structure-1) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "SEQ" nil) (om-load-inputfunmenu1 (quote input-funmenu) "no documentation" "ALPHA?" 1 (list (list "alpha" 1) (list "num" 0))) (om-load-inputfunmenu1 (quote input-funmenu) "no documentation" "LISSE?" 0 (list (list "yes" 1) (list "no" 0))) (om-load-inputfunmenu1 (quote input-funmenu) "no documentation" "RESULT" 1 (list (list "struct" 3) (list "short" 0) (list "extend" 1) (list "save" 2))))) (om-make-point 173 145) nil nil nil nil 1) (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 54 51) (om-make-point 292 44) (list (quote a) (quote b) (quote c) (quote a) (quote b) (quote d) (quote a) (quote b) (quote c) (quote j) (quote h) (quote i) (quote j) (quote h) (quote i) (quote a) (quote b) (quote d) (quote a) (quote b) (quote c) (quote a) (quote b) (quote c) (quote a) (quote b) (quote d) (quote a) (quote b) (quote c) (quote j) (quote h) (quote i) (quote j) (quote h) (quote i) (quote a) (quote b) (quote d) (quote a) (quote b) (quote c)) "(a b c a b d a b c j h i j h i a b d a b c a b c a b d a b c j h i j h i a b d a b c)" nil))) (quote ((3 0 1 0 nil 0) (3 0 4 0 nil 0) (10 0 8 0 nil 0) (7 0 8 2 nil 0) (10 0 9 0 nil 0))) nil 6.0011))