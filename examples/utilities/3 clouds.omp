; OM File Header - Saved 2009/06/15 12:44:33
; (6.04 :patc (om-make-point 27 31) (om-make-point 50 50) (om-make-point 655 483) "No documentation " 183 0 nil "2009/06/15 12:44:33")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "3 clouds" (quote ((om-load-boxin "input2" 2 (om-make-point 467 47) "n cloud 3" "input2" 100 nil) (om-load-boxin "input1" 1 (om-make-point 321 46) "n cloud 2" nil 100 nil) (om-load-boxin "input" 0 (om-make-point 180 48) "n cloud 1" "input" 100 nil) (om-load-boxcall (quote lispfun) "LIST" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 310 296) nil nil nil nil 1) (om-load-boxout "output" 0 (om-make-point 292 409) (quote ((om-load-inputfun (quote input-funbox) "out" "out" nil))) nil nil) (om-load-boxcall (quote genfun) "X-APPEND1" (quote x-append) (quote ((om-load-inputfun (quote input-funbox) "first list" "L1?" nil) (om-load-inputfun (quote input-funbox) "second list" "L2?" nil) (om-load-inputfun (quote input-funbox) "add list" "LST?" nil))) (om-make-point 342 236) nil nil nil nil 1) (om-load-boxcall (quote genfun) "X-APPEND" (quote x-append) (quote ((om-load-inputfun (quote input-funbox) "first list" "L1?" nil) (om-load-inputfun (quote input-funbox) "second list" "L2?" nil) (om-load-inputfun (quote input-funbox) "add list" "LST?" nil))) (om-make-point 249 238) nil nil nil nil 1) (om-load-boxcall (quote genfun) "REPEAT-N21" (quote repeat-n) (quote ((om-load-inputfun (quote input-funbox) "patch" "SELF" nil) (om-load-inputfun (quote input-funbox) "times" "NUM" 100))) (om-make-point 385 138) nil nil nil nil 1) (om-load-boxcall (quote genfun) "REPEAT-N111" (quote repeat-n) (quote ((om-load-inputfun (quote input-funbox) "patch" "SELF" nil) (om-load-inputfun (quote input-funbox) "times" "NUM" 100))) (om-make-point 449 140) nil nil nil nil 1) (om-load-boxcall (quote genfun) "REPEAT-N2" (quote repeat-n) (quote ((om-load-inputfun (quote input-funbox) "patch" "SELF" nil) (om-load-inputfun (quote input-funbox) "times" "NUM" 100))) (om-make-point 245 140) nil nil nil nil 1) (om-load-boxcall (quote genfun) "REPEAT-N11" (quote repeat-n) (quote ((om-load-inputfun (quote input-funbox) "patch" "SELF" nil) (om-load-inputfun (quote input-funbox) "times" "NUM" 100))) (om-make-point 309 140) nil nil nil nil 1) (om-load-boxcall (quote bastype) "aux311" (quote t) (quote nil) (om-make-point 399 22) (om-make-point 32 28) 200 "200" nil) (om-load-boxcall (quote bastype) "aux211" (quote t) (quote nil) (om-make-point 362 23) (om-make-point 32 28) 180 "180" nil) (om-load-boxcall (quote genfun) "OM-RANDOM11" (quote om-random) (quote ((om-load-inputfun (quote input-funbox) "min" "LOW" 0) (om-load-inputfun (quote input-funbox) "max" "HIGH" 5))) (om-make-point 365 64) nil nil nil nil 1) (om-load-boxcall (quote bastype) "aux31" (quote t) (quote nil) (om-make-point 289 20) (om-make-point 32 28) 140 "140" nil) (om-load-boxcall (quote bastype) "aux21" (quote t) (quote nil) (om-make-point 236 20) (om-make-point 32 28) 110 "110" nil) (om-load-boxcall (quote genfun) "OM-RANDOM1" (quote om-random) (quote ((om-load-inputfun (quote input-funbox) "min" "LOW" 0) (om-load-inputfun (quote input-funbox) "max" "HIGH" 5))) (om-make-point 251 64) nil nil nil nil 1) (om-load-boxcall (quote bastype) "aux3" (quote t) (quote nil) (om-make-point 135 24) (om-make-point 32 28) 100 "100" nil) (om-load-boxcall (quote bastype) "aux2" (quote t) (quote nil) (om-make-point 99 24) (om-make-point 20 28) 0 "0" nil) (om-load-boxcall (quote genfun) "REPEAT-N" (quote repeat-n) (quote ((om-load-inputfun (quote input-funbox) "patch" "SELF" nil) (om-load-inputfun (quote input-funbox) "times" "NUM" 100))) (om-make-point 109 140) nil nil nil nil 1) (om-load-boxcall (quote genfun) "OM-RANDOM" (quote om-random) (quote ((om-load-inputfun (quote input-funbox) "min" "LOW" 0) (om-load-inputfun (quote input-funbox) "max" "HIGH" 5))) (om-make-point 99 63) nil nil nil nil 1) (om-load-boxcall (quote genfun) "REPEAT-N1" (quote repeat-n) (quote ((om-load-inputfun (quote input-funbox) "patch" "SELF" nil) (om-load-inputfun (quote input-funbox) "times" "NUM" 100))) (om-make-point 173 142) nil nil nil nil 1) (om-load-boxcall (quote genfun) "MAT-TRANS" (quote mat-trans) (quote ((om-load-inputfun (quote input-funbox) "the list" "MATRIX" nil))) (om-make-point 260 340) nil nil nil nil 1))) (quote ((6 0 3 0 nil 0) (5 0 3 1 nil 0) (22 0 4 0 nil 0) (21 0 5 0 nil 0) (10 0 5 1 nil 0) (8 0 5 2 nil 0) (19 0 6 0 nil 0) (9 0 6 1 nil 0) (7 0 6 2 nil 0) (13 0 7 0 nil 0) (0 0 7 1 nil 0) (13 0 8 0 nil 0) (0 0 8 1 nil 0) (16 0 9 0 nil 0) (1 0 9 1 nil 0) (16 0 10 0 nil 0) (1 0 10 1 nil 0) (12 0 13 0 nil 0) (11 0 13 1 nil 0) (15 0 16 0 nil 0) (14 0 16 1 nil 0) (20 0 19 0 nil 0) (2 0 19 1 nil 0) (18 0 20 0 nil 0) (17 0 20 1 nil 0) (20 0 21 0 nil 0) (2 0 21 1 nil 0) (3 0 22 0 nil 0))) nil 6.04))
