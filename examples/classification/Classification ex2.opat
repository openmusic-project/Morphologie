
(:patch
 (:om-version 0.03)
 (:name "Classification ex2")
 (:doc "")
 (:info
  (:created "2019/09/24 0:37:58")
  (:modified "2019/09/24 0:45:14"))
 (:window (:size (963 584)) (:position (325 147)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :object)
   (:reference bpc)
   (:group-id nil)
   (:name "BPC")
   (:x 489)
   (:y 155)
   (:w 139)
   (:h 88)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "BPC")
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "X-POINTS")
     (:value (:list 0 10))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y-POINTS")
     (:value (:list 0 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "decimals")
     (:value 0)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "X-POINTS") (:reactive nil))
    (:output (:name "Y-POINTS") (:reactive nil))
    (:output (:name "decimals") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class bpc)
     (:slots
      ((:times
        (:list
         0.0
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         10000.0))
       (:onset 0)
       (:duration 10000.0)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:action nil)
       (:color (:color 0 0 0 1.0))
       (:decimals 0)
       (:x-points
        (:list
         76
         99
         27
         77
         85
         65
         50
         35
         53
         90
         7
         73
         71
         13
         40
         42
         33
         22
         100
         57
         123
         132
         123
         116
         110
         118
         115
         126
         121
         132
         131
         117
         127
         117
         117
         124
         120
         133
         137
         118
         123
         136
         123
         123
         127
         131
         136
         115
         129
         123
         114
         134
         133
         133
         123
         139
         135
         119
         129
         139
         115
         130
         114
         122
         120
         118
         115
         119
         139
         139
         124
         120
         116
         135
         111
         140
         138
         133
         131
         135
         110
         130
         110
         134
         113
         134
         133
         114
         128
         118
         140
         121
         137
         131
         132
         122
         140
         130
         133
         132
         122
         115
         131
         133
         121
         134
         119
         137
         110
         114
         133
         119
         128
         131
         130
         115
         134
         111
         138
         114
         181
         199
         184
         189
         187
         194
         188
         186
         199
         185
         197
         185
         194
         185
         182
         189
         197
         191
         191
         193
         181
         195
         182
         187
         191
         181
         199
         190
         185
         198
         197
         192
         188
         190
         181
         191
         182
         192
         192
         187
         196
         192
         180
         199
         190
         181
         189
         187
         191
         199
         197
         191
         196
         190
         198
         193
         180
         183
         193
         180
         181
         196
         190
         188
         194
         184
         189
         184
         196
         183
         187
         198
         198
         194
         188
         180
         198
         193
         189
         186
         196
         194
         185
         187
         184
         185
         195
         193
         184
         189
         183
         200
         189
         185
         188
         182
         193
         195
         191
         190))
       (:y-points
        (:list
         62
         2
         74
         26
         63
         6
         19
         32
         20
         91
         2
         39
         67
         80
         36
         48
         73
         16
         100
         51
         124
         136
         128
         128
         135
         129
         136
         117
         135
         140
         124
         113
         131
         117
         118
         122
         117
         140
         119
         112
         111
         136
         111
         114
         110
         110
         127
         123
         123
         116
         130
         113
         140
         121
         126
         111
         123
         128
         112
         124
         112
         123
         119
         130
         123
         124
         127
         135
         125
         132
         126
         117
         120
         135
         133
         126
         124
         119
         129
         113
         130
         114
         132
         120
         135
         115
         122
         126
         118
         121
         128
         120
         127
         123
         123
         130
         126
         137
         114
         136
         114
         111
         130
         132
         126
         132
         126
         133
         134
         119
         140
         132
         117
         122
         117
         136
         120
         127
         139
         138
         181
         194
         190
         186
         182
         197
         181
         184
         180
         191
         192
         184
         196
         187
         184
         192
         192
         192
         180
         198
         184
         181
         199
         199
         199
         194
         189
         187
         193
         185
         194
         199
         192
         200
         180
         184
         198
         183
         184
         183
         191
         185
         193
         196
         185
         184
         181
         187
         185
         183
         200
         187
         182
         197
         185
         193
         180
         188
         189
         187
         185
         189
         194
         196
         183
         192
         189
         192
         190
         186
         189
         186
         182
         200
         180
         197
         189
         195
         195
         181
         194
         189
         191
         181
         183
         192
         188
         185
         192
         192
         200
         192
         192
         193
         190
         183
         199
         190
         184
         198))))
     (:add-slots
      ((:times
        (:list
         0.0
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         10000.0))
       (:decimals 0)
       (:color (:color 0 0 0 1.0))
       (:name nil)
       (:action nil)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))))))
   (:id 0))
  (:comment
   (:x 720)
   (:y 275)
   (:w 113)
   (:h 50)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text "<- Does n iterations of class-1")
   (:id 1))
  (:comment
   (:x 566)
   (:y 492)
   (:w 97)
   (:h 72)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text "(e-shannon works also with list of lists)")
   (:id 2))
  (:comment
   (:x 700)
   (:y 492)
   (:w 143)
   (:h 60)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text "It is the one closer to the input data.")
   (:id 3))
  (:comment
   (:x 700)
   (:y 421)
   (:w 182)
   (:h 63)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text
    "2) Use e-test to find-out the classification corresponding to minimum entropy:")
   (:id 4))
  (:comment
   (:x 574)
   (:y 426)
   (:w 89)
   (:h 58)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text "1) One run has a minimum entropy value.")
   (:id 5))
  (:box
   (:type :function)
   (:reference (:symbol "E-TEST" "MORPH"))
   (:group-id nil)
   (:name "e-test")
   (:x 700)
   (:y 323)
   (:w 66)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "CLUSTERS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEST")
     (:value "min")
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "out")
     (:value "clust")
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 6))
  (:box
   (:type :function)
   (:reference (:symbol "E-SHANNON" "MORPH"))
   (:group-id nil)
   (:name "e-shannon")
   (:x 618)
   (:y 367)
   (:w 90)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "CLASS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RES")
     (:value "rel")
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 7))
  (:comment
   (:x 429)
   (:y 24)
   (:w 193)
   (:h 29)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text "Non homogeneous clusters")
   (:id 8))
  (:comment
   (:x 435)
   (:y 0)
   (:w 239)
   (:h 29)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text "E_SHANNON - EXEMPLE 2 -")
   (:id 9))
  (:comment
   (:x 130)
   (:y 492)
   (:w 374)
   (:h 47)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text
    "Sometimes, the algorithm doesn't stabilizes itself (Warning message).
Try several runs with meta-class1.")
   (:id 10))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux5")
   (:x 686)
   (:y 248)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 10)
   (:id 11))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux4")
   (:x 627)
   (:y 248)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 3)
   (:id 12))
  (:box
   (:type :function)
   (:reference (:symbol "META-CLASS1" "MORPH"))
   (:group-id nil)
   (:name "meta-class1")
   (:x 600)
   (:y 280)
   (:w 96)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "MATRIX")
     (:value nil)
     (:reactive nil))
    (:input (:type :standard) (:name "N") (:value 2) (:reactive nil))
    (:input
     (:type :standard)
     (:name "ITER")
     (:value 10)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 13))
  (:box
   (:type :function)
   (:reference second)
   (:group-id nil)
   (:name "second")
   (:x 577)
   (:y 111)
   (:w 73)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 14))
  (:box
   (:type :function)
   (:reference first)
   (:group-id nil)
   (:name "first")
   (:x 511)
   (:y 111)
   (:w 57)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 15))
  (:box
   (:type :function)
   (:reference mat-trans)
   (:group-id nil)
   (:name "mat-trans")
   (:x 244)
   (:y 165)
   (:w 86)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "MATRIX")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 16))
  (:comment
   (:x 183)
   (:y 435)
   (:w 262)
   (:h 57)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text
    "in relative mode,
this classification with 3 classes and a MINIMUM entropy matches better with the input data.")
   (:id 17))
  (:box
   (:type :function)
   (:reference (:symbol "E-SHANNON" "MORPH"))
   (:group-id nil)
   (:name "e-shannon")
   (:x 484)
   (:y 367)
   (:w 90)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "CLASS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RES")
     (:value "rel")
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 18))
  (:comment
   (:x 506)
   (:y 323)
   (:w 103)
   (:h 30)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text "defines 5 classes")
   (:id 19))
  (:box
   (:type :function)
   (:reference (:symbol "CLASS-1" "MORPH"))
   (:group-id nil)
   (:name "class-1")
   (:x 479)
   (:y 280)
   (:w 71)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "MATRIX")
     (:value nil)
     (:reactive nil))
    (:input (:type :standard) (:name "N") (:value 2) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 20))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux11111")
   (:x 506)
   (:y 248)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 5)
   (:id 21))
  (:box
   (:type :function)
   (:reference (:symbol "E-SHANNON" "MORPH"))
   (:group-id nil)
   (:name "e-shannon")
   (:x 355)
   (:y 367)
   (:w 90)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "CLASS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RES")
     (:value "rel")
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 22))
  (:box
   (:type :function)
   (:reference (:symbol "E-SHANNON" "MORPH"))
   (:group-id nil)
   (:name "e-shannon")
   (:x 222)
   (:y 367)
   (:w 90)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "CLASS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RES")
     (:value "rel")
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 23))
  (:box
   (:type :function)
   (:reference (:symbol "E-SHANNON" "MORPH"))
   (:group-id nil)
   (:name "e-shannon")
   (:x 59)
   (:y 367)
   (:w 90)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "CLASS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RES")
     (:value "rel")
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 24))
  (:comment
   (:x 377)
   (:y 323)
   (:w 102)
   (:h 21)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text "defines 4 classes")
   (:id 25))
  (:box
   (:type :function)
   (:reference (:symbol "CLASS-1" "MORPH"))
   (:group-id nil)
   (:name "class-1")
   (:x 350)
   (:y 280)
   (:w 71)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "MATRIX")
     (:value nil)
     (:reactive nil))
    (:input (:type :standard) (:name "N") (:value 2) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 26))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux1111")
   (:x 377)
   (:y 248)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 4)
   (:id 27))
  (:comment
   (:x 244)
   (:y 325)
   (:w 102)
   (:h 21)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text "defines 3 classes")
   (:id 28))
  (:box
   (:type :function)
   (:reference (:symbol "CLASS-1" "MORPH"))
   (:group-id nil)
   (:name "class-1")
   (:x 217)
   (:y 280)
   (:w 71)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "MATRIX")
     (:value nil)
     (:reactive nil))
    (:input (:type :standard) (:name "N") (:value 2) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 29))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux111")
   (:x 244)
   (:y 246)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 3)
   (:id 30))
  (:comment
   (:x 117)
   (:y 325)
   (:w 102)
   (:h 21)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text "defines 2 classes")
   (:id 31))
  (:box
   (:type :function)
   (:reference (:symbol "CLASS-1" "MORPH"))
   (:group-id nil)
   (:name "class-1")
   (:x 90)
   (:y 280)
   (:w 71)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "MATRIX")
     (:value nil)
     (:reactive nil))
    (:input (:type :standard) (:name "N") (:value 2) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 32))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux11")
   (:x 117)
   (:y 246)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 2)
   (:id 33))
  (:box
   (:type :function)
   (:reference (:symbol "L-MATRIX" "MORPH"))
   (:group-id nil)
   (:name "l-matrix")
   (:x 66)
   (:y 185)
   (:w 76)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 34))
  (:comment
   (:x 167)
   (:y 94)
   (:w 208)
   (:h 33)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text
    "<- generates 3 clouds of 20, 100 and 100 points each in 2 dimensions")
   (:id 35))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux")
   (:x 124)
   (:y 44)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 100)
   (:id 36))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:om-version 0.03)
     (:name "3 clouds")
     (:doc "")
     (:info (:created nil) (:modified nil))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 298)
       (:y 296)
       (:w 52)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :function)
       (:reference x-append)
       (:group-id nil)
       (:name "x-append")
       (:x 342)
       (:y 238)
       (:w 84)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "L1?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "L2?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "lst?")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :function)
       (:reference x-append)
       (:group-id nil)
       (:name "x-append")
       (:x 248)
       (:y 238)
       (:w 84)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "L1?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "L2?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "lst?")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :special)
       (:reference repeat-n)
       (:group-id nil)
       (:name "repeat-n")
       (:x 451)
       (:y 140)
       (:w 90)
       (:h 28)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "self")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "num")
         (:value 100)
         (:reactive nil)))
       (:outputs (:output (:name "collected results") (:reactive nil)))
       (:id 3))
      (:box
       (:type :special)
       (:reference repeat-n)
       (:group-id nil)
       (:name "repeat-n")
       (:x 545)
       (:y 140)
       (:w 90)
       (:h 28)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "self")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "num")
         (:value 100)
         (:reactive nil)))
       (:outputs (:output (:name "collected results") (:reactive nil)))
       (:id 4))
      (:box
       (:type :special)
       (:reference repeat-n)
       (:group-id nil)
       (:name "repeat-n")
       (:x 245)
       (:y 140)
       (:w 90)
       (:h 28)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "self")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "num")
         (:value 100)
         (:reactive nil)))
       (:outputs (:output (:name "collected results") (:reactive nil)))
       (:id 5))
      (:box
       (:type :special)
       (:reference repeat-n)
       (:group-id nil)
       (:name "repeat-n")
       (:x 346)
       (:y 140)
       (:w 90)
       (:h 28)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "self")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "num")
         (:value 100)
         (:reactive nil)))
       (:outputs (:output (:name "collected results") (:reactive nil)))
       (:id 6))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux311")
       (:x 499)
       (:y 45)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 200)
       (:id 7))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux211")
       (:x 455)
       (:y 47)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 180)
       (:id 8))
      (:box
       (:type :function)
       (:reference om-random)
       (:group-id nil)
       (:name "om-random")
       (:x 445)
       (:y 78)
       (:w 96)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LOW")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "HIGH")
         (:value 5)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux31")
       (:x 335)
       (:y 40)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 140)
       (:id 10))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux21")
       (:x 291)
       (:y 40)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 110)
       (:id 11))
      (:box
       (:type :function)
       (:reference om-random)
       (:group-id nil)
       (:name "om-random")
       (:x 281)
       (:y 78)
       (:w 96)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LOW")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "HIGH")
         (:value 5)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux3")
       (:x 133)
       (:y 40)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 100)
       (:id 13))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux2")
       (:x 89)
       (:y 40)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 0)
       (:id 14))
      (:box
       (:type :special)
       (:reference repeat-n)
       (:group-id nil)
       (:name "repeat-n")
       (:x 51)
       (:y 140)
       (:w 90)
       (:h 28)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "self")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "num")
         (:value 100)
         (:reactive nil)))
       (:outputs (:output (:name "collected results") (:reactive nil)))
       (:id 15))
      (:box
       (:type :function)
       (:reference om-random)
       (:group-id nil)
       (:name "om-random")
       (:x 79)
       (:y 78)
       (:w 96)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LOW")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "HIGH")
         (:value 5)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 16))
      (:box
       (:type :special)
       (:reference repeat-n)
       (:group-id nil)
       (:name "repeat-n")
       (:x 153)
       (:y 140)
       (:w 90)
       (:h 28)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "self")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "num")
         (:value 100)
         (:reactive nil)))
       (:outputs (:output (:name "collected results") (:reactive nil)))
       (:id 17))
      (:box
       (:type :function)
       (:reference mat-trans)
       (:group-id nil)
       (:name "mat-trans")
       (:x 276)
       (:y 340)
       (:w 86)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "MATRIX")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 18))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "input")
         (:doc "n cloud 1")))
       (:group-id nil)
       (:name "input")
       (:x 186)
       (:y 46)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 19))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 290)
       (:y 409)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 20))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 2)
         (:name "input1")
         (:doc "n cloud 2")))
       (:group-id nil)
       (:name "input1")
       (:x 376)
       (:y 50)
       (:w 56)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 21))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 3)
         (:name "input2")
         (:doc "n cloud 3")))
       (:group-id nil)
       (:name "input2")
       (:x 545)
       (:y 47)
       (:w 56)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 22)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 18 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 1 :out 0))
       (:to (:box 0 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 0 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 2 :in 2))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 4 :out 0))
       (:to (:box 1 :in 2))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 2 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 6 :out 0))
       (:to (:box 1 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 7 :out 0))
       (:to (:box 9 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 8 :out 0))
       (:to (:box 9 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 9 :out 0))
       (:to (:box 3 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 9 :out 0))
       (:to (:box 4 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 10 :out 0))
       (:to (:box 12 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 11 :out 0))
       (:to (:box 12 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 12 :out 0))
       (:to (:box 5 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 12 :out 0))
       (:to (:box 6 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 13 :out 0))
       (:to (:box 16 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 14 :out 0))
       (:to (:box 16 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 15 :out 0))
       (:to (:box 2 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 16 :out 0))
       (:to (:box 15 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 16 :out 0))
       (:to (:box 17 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 17 :out 0))
       (:to (:box 1 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 18 :out 0))
       (:to (:box 20 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 19 :out 0))
       (:to (:box 15 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 19 :out 0))
       (:to (:box 17 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 21 :out 0))
       (:to (:box 5 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 21 :out 0))
       (:to (:box 6 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 22 :out 0))
       (:to (:box 3 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 22 :out 0))
       (:to (:box 4 :in 1))
       (:attributes (:color nil :style nil :modif nil))))))
   (:group-id nil)
   (:name "3 clouds")
   (:x 44)
   (:y 78)
   (:w 119)
   (:h 61)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input1")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input2")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 37))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux2")
   (:x 51)
   (:y 44)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 20)
   (:id 38))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux3")
   (:x 88)
   (:y 44)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 100)
   (:id 39))
  (:comment
   (:x 655)
   (:y 36)
   (:w 212)
   (:h 25)
   (:fgcolor
    (:color-or-nil
     (:color
      (:color
       0.6270285248756409D0
       0.16350972652435303D0
       0.15764805674552918D0
       1.0D0))
     (:t-or-nil t)))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Calibri") (:size 14.0D0) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "THESE EXAMPLES DO NOT WORK !")
   (:id 40)))
 (:connections
  (:connection
   (:from (:box 11 :out 0))
   (:to (:box 13 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 13 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 6 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 7 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 14 :out 0))
   (:to (:box 0 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 15 :out 0))
   (:to (:box 0 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 16 :out 0))
   (:to (:box 14 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 16 :out 0))
   (:to (:box 15 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 20 :out 0))
   (:to (:box 18 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 21 :out 0))
   (:to (:box 20 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 26 :out 0))
   (:to (:box 22 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 27 :out 0))
   (:to (:box 26 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 29 :out 0))
   (:to (:box 23 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 30 :out 0))
   (:to (:box 29 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 32 :out 0))
   (:to (:box 24 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 33 :out 0))
   (:to (:box 32 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 34 :out 0))
   (:to (:box 13 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 34 :out 0))
   (:to (:box 20 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 34 :out 0))
   (:to (:box 26 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 34 :out 0))
   (:to (:box 29 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 34 :out 0))
   (:to (:box 32 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 36 :out 0))
   (:to (:box 37 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 37 :out 0))
   (:to (:box 34 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 37 :out 0))
   (:to (:box 16 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 38 :out 0))
   (:to (:box 37 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 39 :out 0))
   (:to (:box 37 :in 1))
   (:attributes (:color nil :style nil :modif nil)))))