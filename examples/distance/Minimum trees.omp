; OM File Header - Saved 2009/06/15 12:44:33
; (6.04 :patc (om-make-point 139 73) (om-make-point 50 50) (om-make-point 591 490) "No documentation " 183 0 nil "2009/06/15 12:44:33")
; End File Header
(in-package :om)(load-lib-for (quote ("morphologie")))(setf *om-current-persistent* (om-load-patch1 "Minimum trees" (quote ((om-load-boxcomment "comment" (om-make-point 247 61) (quote "(the sequences are converted in strings for the representation)") "" (om-make-point 251 356) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment11" (om-make-point 211 60) (quote "4) Finally represents graphically the minimum tree") "" (om-make-point 235 289) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment1" (om-make-point 186 47) (quote "3) And compute the minimum tree following the Prim algorithm") "" (om-make-point 239 218) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 200 54) (quote "2) Then we compute the matrix of distances between sequences") "" (om-make-point 239 147) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 199 33) (quote "1) Here is a list of symbol sequences") "" (om-make-point 86 19) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote genfun) "PRIM-TREE1" (quote morph::prim-tree) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "DIST" nil))) (om-make-point 171 212) nil nil nil nil 1) (om-load-boxcall (quote genfun) "DRAW-TREE1" (quote morph::draw-tree) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "TREE" nil))) (om-make-point 170 284) nil nil nil nil 1) (om-load-boxcall (quote bastype) "aux1" (quote t) (quote nil) (om-make-point 12 52) (om-make-point 333 54) (list (list (quote a) (quote b) (quote c)) (list (quote a) (quote c) (quote t) (quote h) (quote i)) (list (quote a) (quote b) (quote b)) (list (quote p) (quote a) (quote p)) (list (quote a) (quote b) (quote d)) (list (quote a) (quote e) (quote b) (quote d)) (list (quote e) (quote d) (quote z) (quote a) (quote k)) (list (quote t) (quote h) (quote i)) (list (quote i) (quote b) (quote c)) (list (quote a) (quote b) (quote t) (quote h) (quote i)) (list (quote p) (quote o) (quote p)) (list (quote t) (quote h) (quote o)) (list (quote a) (quote b) (quote b)) (list (quote a) (quote e) (quote b) (quote d)) (list (quote p) (quote a) (quote p)) (list (quote p) (quote o) (quote p)) (list (quote a) (quote b) (quote b)) (list (quote t) (quote h) (quote i))) "((a b c) (a c t h i) (a b b) (p a p) (a b d) (a e b d) (e d z a k) (t h i) (i b c) (a b t h i) (p o p) (t h o) (a b b) (a e b d) (p a p) (p o p) (a b b) (t h i))" nil) (om-load-boxcall (quote genfun) "LDL-DISTANCE" (quote morph::ldl-distance) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "L-SEQ" (list (list (quote morph::a) (quote morph::b) (quote morph::c)) (list (quote morph::a) (quote morph::b) (quote morph::b)) (list (quote morph::a) (quote morph::b) (quote morph::c)))) (om-load-inputfun (quote input-funbox) "no documentation" "CHANGE" 1.0) (om-load-inputfun (quote input-funbox) "no documentation" "INS/SUP" 1.0) (om-load-inputfun (quote input-funbox) "no documentation" "INEX" 0.0) (om-load-inputfunmenu1 (quote input-funmenu) "no documentation" "SCALE" "abs" (list (list "relative" "rel") (list "absolute" "abs"))) (om-load-inputfunmenu1 (quote input-funmenu) "no documentation" "RESULT" "short" (list (list "short" "short") (list "extended" "ext") (list "save" "save"))))) (om-make-point 167 149) nil nil nil nil 1))) (quote ((8 0 5 0 nil 0) (5 0 6 0 nil 0) (7 0 8 0 nil 0))) nil 6.04))
