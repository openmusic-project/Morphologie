
(:patch
 (:om-version 0.03)
 (:name "Minimum trees")
 (:doc "")
 (:info
  (:created "2019/09/24 0:51:37")
  (:modified "2019/09/25 14:06:22"))
 (:window (:size (591 490)) (:position (526 552)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:comment
   (:x 269)
   (:y 356)
   (:w 247)
   (:h 41)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text
    "(the sequences are converted in strings for the representation)")
   (:id 0))
  (:comment
   (:x 269)
   (:y 289)
   (:w 211)
   (:h 43)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text "4) Finally represents graphically the minimum tree")
   (:id 1))
  (:comment
   (:x 269)
   (:y 218)
   (:w 186)
   (:h 47)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text
    "3) And compute the minimum tree following the Prim algorithm")
   (:id 2))
  (:comment
   (:x 269)
   (:y 147)
   (:w 200)
   (:h 54)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text
    "2) Then we compute the matrix of distances between sequences")
   (:id 3))
  (:comment
   (:x 86)
   (:y 19)
   (:w 199)
   (:h 33)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Geneva") (:size 10) (:style :plain)))
   (:align nil)
   (:text "1) Here is a list of symbol sequences")
   (:id 4))
  (:box
   (:library "Morphologie")
   (:type :function)
   (:reference (:symbol "PRIM-TREE" "MORPH"))
   (:group-id nil)
   (:name "prim-tree")
   (:x 172)
   (:y 212)
   (:w 85)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "DIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 5))
  (:box
   (:library "Morphologie")
   (:type :function)
   (:reference (:symbol "DRAW-TREE" "MORPH"))
   (:group-id nil)
   (:name "draw-tree")
   (:x 170)
   (:y 284)
   (:w 87)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "TREE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 6))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux1")
   (:x 13)
   (:y 52)
   (:w 333)
   (:h 54)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value
    (:list
     (:list a b c)
     (:list a c t h i)
     (:list a b b)
     (:list p a p)
     (:list a b d)
     (:list a e b d)
     (:list e d z a k)
     (:list t h i)
     (:list i b c)
     (:list a b t h i)
     (:list p o p)
     (:list t h o)
     (:list a b b)
     (:list a e b d)
     (:list p a p)
     (:list p o p)
     (:list a b b)
     (:list t h i)))
   (:id 7))
  (:box
   (:library "Morphologie")
   (:type :function)
   (:reference (:symbol "LDL-DISTANCE" "MORPH"))
   (:group-id nil)
   (:name "ldl-distance")
   (:x 167)
   (:y 149)
   (:w 94)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "L-SEQ")
     (:value
      (:list
       (:list
        (:symbol "A" "MORPH")
        (:symbol "B" "MORPH")
        (:symbol "C" "MORPH"))
       (:list
        (:symbol "A" "MORPH")
        (:symbol "B" "MORPH")
        (:symbol "B" "MORPH"))
       (:list
        (:symbol "A" "MORPH")
        (:symbol "B" "MORPH")
        (:symbol "C" "MORPH"))))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CHANGE")
     (:value 1.0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "INS/SUP")
     (:value 1.0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "INEX")
     (:value 0.0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SCALE")
     (:value "abs")
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RESULT")
     (:value "short")
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 8)))
 (:connections
  (:connection
   (:from (:box 5 :out 0))
   (:to (:box 6 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 7 :out 0))
   (:to (:box 8 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 8 :out 0))
   (:to (:box 5 :in 0))
   (:attributes (:color nil :style nil :modif nil)))))